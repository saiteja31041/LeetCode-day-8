/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

 struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* dummyHead = (struct ListNode*)malloc(sizeof(struct ListNode));
    struct ListNode* current = dummyHead;
    dummyHead->next = NULL;
    int carry = 0;

    while (l1 != NULL || l2 != NULL || carry) {
        // Get values, defaulting to 0 if list is exhausted
        int val1 = (l1 != NULL) ? l1->val : 0;
        int val2 = (l2 != NULL) ? l2->val : 0;

        // Calculate sum and carry
        int sum = val1 + val2 + carry;
        carry = sum / 10;
        int digit = sum % 10;

        // Create new node
        struct ListNode* newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
        newNode->val = digit;
        newNode->next = NULL;

        current->next = newNode;
        current = current->next;

        // Move to next nodes if available
        if (l1) l1 = l1->next;
        if (l2) l2 = l2->next;
    }

    return dummyHead->next;
}
